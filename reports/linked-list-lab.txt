Lab report for Linked List Lab - rgrant6
Timestamp: 2014-04-10 09:20:30

|  :scenario |                                    :title |                              :result | :score |
|------------+-------------------------------------------+--------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                 Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |            Insert doesn't increment size. | Pass: student tests detected errors. |      5 |
|    broke-2 |                    Insert doesn't insert. | Pass: student tests detected errors. |      5 |
|    broke-3 |                    Insert truncates list. | Pass: student tests detected errors. |      5 |
|    broke-4 |                    Sorted insert deletes. | Pass: student tests detected errors. |      5 |
|    broke-5 |             Sorted insert truncates list. | Pass: student tests detected errors. |      5 |
|    broke-6 |                    Delete truncates list. | Pass: student tests detected errors. |      5 |
|    broke-7 |            Delete doesn't decrement size. | Pass: student tests detected errors. |      5 |
|    broke-8 |            Delete always decrements size. | Pass: student tests detected errors. |      5 |
|    broke-9 |              Delete-all only deletes one. | Pass: student tests detected errors. |      5 |
|   broke-10 | Delete all decrements count in all cases. | Pass: student tests detected errors. |      5 |
|      total |                               Total Score |                                      |    100 |

Details:


** Details for Test student code vs instructor tests

All checks (45) succeeded.


** Details for Test student tests vs instructor code

All checks (33) succeeded.


** Details for Insert doesn't increment size.


FAIL "about `insert-front` - it increments the size properly." at (t_core.clj:26)
    Expected: 1
      Actual: 0

FAIL "about `insert-front` - it increments the size properly." at (t_core.clj:27)
    Expected: 2
      Actual: 0
FAILURE: 2 checks failed.  (But 31 succeeded.)
Subprocess failed


** Details for Insert doesn't insert.


FAIL "about `insert-front` - Insert inserts." at (t_core.clj:24)
    Expected: 30
      Actual: nil

FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:29)
    Expected: 10
      Actual: nil

FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:31)
    Expected: 20
      Actual: nil

FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:32)
    Expected: 10
      Actual: nil
FAILURE: 4 checks failed.  (But 29 succeeded.)
Subprocess failed


** Details for Insert truncates list.


FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:32)
    Expected: 10
      Actual: nil
FAILURE: 1 check failed.  (But 32 succeeded.)
Subprocess failed


** Details for Sorted insert deletes.


FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:51)
    Expected: {:car 0, :cdr {:car 1, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 0, :cdr {:car 5, :cdr {:car 8, :cdr }}}::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:52)
    Expected: {:car 1, :cdr {:car 2, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr {:car 2, :cdr {:car 8, :cdr }}}::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:53)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 7, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr {:car 5, :cdr {:car 7, :cdr }}}::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:55)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr {:car 5, :cdr {:car 8, :cdr }}}::linked_list_lab.core.Cons
FAILURE: 4 checks failed.  (But 29 succeeded.)
Subprocess failed


** Details for Sorted insert truncates list.


FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:52)
    Expected: {:car 1, :cdr {:car 2, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:53)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 7, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:54)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 8, :cdr {:car 9, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:55)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons
FAILURE: 4 checks failed.  (But 29 succeeded.)
Subprocess failed


** Details for Delete truncates list.


FAIL "about `delete` - the size of the list does not change when elt is not present" at (t_core.clj:59)
    Expected: 2
      Actual: 1
FAILURE: 1 check failed.  (But 32 succeeded.)
Subprocess failed


** Details for Delete doesn't decrement size.


FAIL "about `delete` - the size of the list decreases by one when elt is present" at (t_core.clj:62)
    Expected: 2
      Actual: 3

FAIL "about `delete` - the size of the list decreases by one when elt is present" at (t_core.clj:63)
    Expected: 0
      Actual: 1
FAILURE: 2 checks failed.  (But 31 succeeded.)
Subprocess failed


** Details for Delete always decrements size.


FAIL "about `delete` - the size of the list does not change when elt is not present" at (t_core.clj:59)
    Expected: 2
      Actual: 1

FAIL "about `delete` - the size of the list does not change when elt is not present" at (t_core.clj:60)
    Expected: 0
      Actual: -1
FAILURE: 2 checks failed.  (But 31 succeeded.)
Subprocess failed


** Details for Delete-all only deletes one.


FAIL "about `delete-all` - it deletes all occurances of elt" at (t_core.clj:68)
    Expected: {:data {:car 1, :cdr {:car 3, :cdr {:car 1, :cdr }}}, :size 3}::linked_list_lab.core.List
      Actual: {:data {:car 1, :cdr {:car 3, :cdr {:car 2, :cdr {:car 1, :cdr }}}}, :size 4}::linked_list_lab.core.List

FAIL "about `delete-all` - it deletes all occurances of elt" at (t_core.clj:69)
    Expected: {:data , :size 0}::linked_list_lab.core.List
      Actual: {:data {:car 4, :cdr {:car 4, :cdr }}, :size 2}::linked_list_lab.core.List
FAILURE: 2 checks failed.  (But 31 succeeded.)
Subprocess failed


** Details for Delete all decrements count in all cases.


FAIL "about `delete-all` - it deletes all occurances of elt" at (t_core.clj:68)
    Expected: {:data {:car 1, :cdr {:car 3, :cdr {:car 1, :cdr }}}, :size 3}::linked_list_lab.core.List
      Actual: {:data {:car 1, :cdr {:car 3, :cdr {:car 1, :cdr }}}, :size 4}::linked_list_lab.core.List

FAIL "about `delete-all` - it deletes all occurances of elt" at (t_core.clj:69)
    Expected: {:data , :size 0}::linked_list_lab.core.List
      Actual: {:data , :size 2}::linked_list_lab.core.List

FAIL "about `delete-all` - it doesn't delete anything if elt is not found" at (t_core.clj:71)
    Expected: {:data {:car 6, :cdr {:car 7, :cdr {:car 8, :cdr {:car 9, :cdr }}}}, :size 4}::linked_list_lab.core.List
      Actual: {:data {:car 6, :cdr {:car 7, :cdr {:car 8, :cdr {:car 9, :cdr }}}}, :size 3}::linked_list_lab.core.List
FAILURE: 3 checks failed.  (But 30 succeeded.)
Subprocess failed
